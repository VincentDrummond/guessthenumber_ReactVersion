{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/View.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// the body\n// here is the app interface, the presentation layer, the HTML\n// store functional components\n// dont use too much logic - pass down functionality from the App\n// App component imports in from here to render the UI\n// functional components DO NOT need imports\n// (unless you're using state)\n// all you're doing is making a function\nexport default function View(_ref) {\n  let {\n    //  use functional if there is no need to handle state\n    difficulty,\n    guess,\n    help,\n    initialise,\n    onInput //  destructured the props. from line 37 in view.js\n    //  can now get rid of all props. \n\n  } = _ref;\n\n  if (difficulty) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onInput,\n        type: \"number\",\n        placeholder: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guess,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: help,\n        children: \"Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guess The Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Try to guess a number between 1 and 100 in less than 10 tries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: initialise,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"easy\",\n          children: \"Go easy on me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"This ain't my first rodeo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hard\",\n          children: \"I like Pain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n_c = View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/View.js"],"names":["View","difficulty","guess","help","initialise","onInput"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,eAAe,SAASA,IAAT,OASZ;AAAA,MAT0B;AAC7B;AACIC,IAAAA,UAFyB;AAGzBC,IAAAA,KAHyB;AAIzBC,IAAAA,IAJyB;AAKzBC,IAAAA,UALyB;AAMzBC,IAAAA,OANyB,CAO7B;AACA;;AAR6B,GAS1B;;AACC,MAAIJ,UAAJ,EAAgB;AACZ,wBACA;AAAA,8BACI;AAAQ,QAAA,QAAQ,EAAEI,OAAlB;AACQ,QAAA,IAAI,EAAC,QADb;AAEQ,QAAA,WAAW,EAAC;AAFpB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAEC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADA;AAUH,GAXD,MAWO;AACH,wBACA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAQ,QAAA,QAAQ,EAAEC,UAAlB;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADA;AAaH;AACA;KApCmBJ,I","sourcesContent":["// the body\n// here is the app interface, the presentation layer, the HTML\n// store functional components\n\n// dont use too much logic - pass down functionality from the App\n// App component imports in from here to render the UI\n\n// functional components DO NOT need imports\n// (unless you're using state)\n// all you're doing is making a function\n\nexport default function View({\n//  use functional if there is no need to handle state\n    difficulty,\n    guess,\n    help,\n    initialise,\n    onInput\n//  destructured the props. from line 37 in view.js\n//  can now get rid of all props. \n}) {\n    if (difficulty) {\n        return (\n        <>\n            <input  onChange={onInput}\n                    type=\"number\"\n                    placeholder=\"?\" />\n            <button onClick={guess}>Guess</button>\n            <button onClick={help}>Help</button>\n        </>\n\n        );\n    } else {\n        return (\n        <>\n            <h1>Guess The Number</h1>\n            <h2>Try to guess a number between 1 and 100 in less than 10 tries</h2>\n    \n            <select onChange={initialise}>\n                <option value=\"\">Choose an option</option>\n                <option value=\"easy\">Go easy on me</option>\n                <option value=\"medium\">This ain't my first rodeo</option>\n                <option value=\"hard\">I like Pain</option>\n            </select>\n        </>\n        )\n    }\n    }"]},"metadata":{},"sourceType":"module"}