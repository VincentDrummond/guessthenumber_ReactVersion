{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/App.js\";\n// the engine\n//set up the App logic, methods etc\nimport { Component } from 'react';\nimport View from \"./View.js\"; // bring in View from another file\n\nimport { randomNumber, randomInteger } from './components/maths.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lower: null,\n      upper: null,\n      maxTries: null,\n      target: null,\n      attempts: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(View, {\n      guess: () => {\n        this.guess();\n      },\n      help: e => {\n        this.help();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n  initialise() {\n    let difficulty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"easy\";\n    //\t\t1. grab difficulty setting from DIFFICULTIES\n    const {\n      lower = 1,\n      upper = 100,\n      tries: maxTries = 10\n    } = App.DIFFICULTIES[difficulty] || {}; //\t\t2. initialise instance with a target\n  }\n\n  guess() {\n    let number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    alert(number);\n  }\n\n  help() {\n    alert(\"Help\");\n  }\n\n}\n\nApp.DIFFICULTIES = {\n  easy: {\n    tries: 10,\n    upper: 25\n  },\n  medium: {\n    tries: 7,\n    upper: 50\n  },\n  hard: {\n    tries: 5,\n    upper: 100\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/App.js"],"names":["Component","View","randomNumber","randomInteger","App","state","lower","upper","maxTries","target","attempts","render","guess","e","help","initialise","difficulty","tries","DIFFICULTIES","number","alert","easy","medium","hard"],"mappings":";AAAA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;;;AAIA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAiB3BK,KAjB2B,GAiBnB;AACPC,MAAAA,KAAK,EAAE,IADA;AAEPC,MAAAA,KAAK,EAAE,IAFA;AAGPC,MAAAA,QAAQ,EAAE,IAHH;AAIPC,MAAAA,MAAM,EAAE,IAJD;AAKPC,MAAAA,QAAQ,EAAE;AALH,KAjBmB;AAAA;;AAyB3BC,EAAAA,MAAM,GAAG;AACR,wBACE,QAAC,IAAD;AACC,MAAA,KAAK,EAAE,MAAM;AACZ,aAAKC,KAAL;AACA,OAHF;AAKC,MAAA,IAAI,EAAEC,CAAC,IAAI;AACV,aAAKC,IAAL;AACA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AAWA;;AAEDC,EAAAA,UAAU,GAAsB;AAAA,QAArBC,UAAqB,uEAAR,MAAQ;AACjC;AACG,UAAM;AACLV,MAAAA,KAAK,GAAG,CADH;AAELC,MAAAA,KAAK,GAAG,GAFH;AAGLU,MAAAA,KAAK,EAAET,QAAQ,GAAG;AAHb,QAIFJ,GAAG,CAACc,YAAJ,CAAiBF,UAAjB,KAAgC,EAJpC,CAF8B,CAQjC;AACE;;AAEDJ,EAAAA,KAAK,GAAa;AAAA,QAAZO,MAAY,uEAAH,CAAG;AACjBC,IAAAA,KAAK,CAACD,MAAD,CAAL;AACA;;AAEDL,EAAAA,IAAI,GAAG;AACNM,IAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AAxD0B;;AAAtBhB,G,CAEEc,Y,GAAe;AACrBG,EAAAA,IAAI,EAAE;AACLJ,IAAAA,KAAK,EAAE,EADF;AAELV,IAAAA,KAAK,EAAE;AAFF,GADe;AAKrBe,EAAAA,MAAM,EAAE;AACPL,IAAAA,KAAK,EAAE,CADA;AAEPV,IAAAA,KAAK,EAAE;AAFA,GALa;AASrBgB,EAAAA,IAAI,EAAE;AACLN,IAAAA,KAAK,EAAE,CADF;AAELV,IAAAA,KAAK,EAAE;AAFF;AATe,C;AA2DvB,eAAeH,GAAf","sourcesContent":["// the engine\n//set up the App logic, methods etc\n\nimport { Component } from 'react';\nimport View from \"./View.js\";\n// bring in View from another file\nimport { randomNumber, randomInteger } from './components/maths.js';\n\n\n\nclass App extends Component {\n//use class if there is a need to handle state\n\tstatic DIFFICULTIES = {\n\t\teasy: {\n\t\t\ttries: 10,\n\t\t\tupper: 25\n\t\t},\n\t\tmedium: {\n\t\t\ttries: 7,\n\t\t\tupper: 50,\n\t\t},\n\t\thard: {\n\t\t\ttries: 5,\n\t\t\tupper: 100,\n\t\t}\n\t}\n\n\tstate = {\n\t\tlower: null,\n\t\tupper: null,\n\t\tmaxTries: null,\n\t\ttarget: null,\n\t\tattempts: [],\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t\t<View\n\t\t\t\t\tguess={() => {\n\t\t\t\t\t\tthis.guess();\n\t\t\t\t\t}}\n\n\t\t\t\t\thelp={e => {\n\t\t\t\t\t\tthis.help();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t);\n\t}\n\n\tinitialise(difficulty = \"easy\") {\n//\t\t1. grab difficulty setting from DIFFICULTIES\n\t\t\tconst {\n\t\t\t\tlower = 1,\n\t\t\t\tupper = 100,\n\t\t\t\ttries: maxTries = 10,\n\t\t\t} = App.DIFFICULTIES[difficulty] || {};\n\n//\t\t2. initialise instance with a target\n\t}\n\n\tguess(number = 1) {\n\t\talert(number);\n\t}\n\n\thelp() {\n\t\talert(\"Help\");\n\t}\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}