{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/App.js\";\n// the engine\n//set up the App logic, methods etc\nimport { Component } from 'react';\nimport View from \"./View.js\"; // bring in View from another file\n\nimport { randomNumber, randomInteger } from './components/maths.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      difficulty: null,\n      lower: null,\n      upper: null,\n      maxTries: null,\n      target: null,\n      attempts: [],\n      guess: null\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // this is sending all these values to View and destructured in line 12\n      _jsxDEV(View, {\n        initialise: _ref => {\n          let {\n            target: {\n              options,\n              selectedIndex\n            }\n          } = _ref;\n          this.initialise(options[selectedIndex].value);\n        },\n        difficulty: this.state.difficulty,\n        guess: () => {\n          this.guess();\n        },\n        help: e => {\n          this.help();\n        },\n        onInput: e => {\n          e.target;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    );\n  }\n\n  initialise() {\n    let difficulty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"easy\";\n    //\t\t1. grab difficulty setting from DIFFICULTIES\n    const {\n      lower = 1,\n      upper = 100,\n      tries: maxTries = 10\n    } = App.DIFFICULTIES[difficulty];\n    this.setState({\n      difficulty,\n      lower,\n      upper,\n      maxTries,\n      target: randomInteger(lower, upper)\n    });\n  }\n\n  guess() {\n    let number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    alert(number);\n  }\n\n  help() {\n    alert(\"Help\");\n  }\n\n}\n\nApp.DIFFICULTIES = {\n  easy: {\n    tries: 10,\n    upper: 25\n  },\n  medium: {\n    tries: 7,\n    upper: 50\n  },\n  hard: {\n    tries: 5,\n    upper: 100\n  }\n};\nexport default App;","map":{"version":3,"sources":["/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/App.js"],"names":["Component","View","randomNumber","randomInteger","App","state","difficulty","lower","upper","maxTries","target","attempts","guess","render","options","selectedIndex","initialise","value","e","help","tries","DIFFICULTIES","setState","number","alert","easy","medium","hard"],"mappings":";AAAA;AACA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;;;AAIA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAiB3BK,KAjB2B,GAiBnB;AACPC,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,KAAK,EAAE,IAFA;AAGPC,MAAAA,KAAK,EAAE,IAHA;AAIPC,MAAAA,QAAQ,EAAE,IAJH;AAKPC,MAAAA,MAAM,EAAE,IALD;AAMPC,MAAAA,QAAQ,EAAE,EANH;AAOPC,MAAAA,KAAK,EAAE;AAPA,KAjBmB;AAAA;;AA2B3BC,EAAAA,MAAM,GAAG;AACR;AAAA;AACF;AACI,cAAC,IAAD;AACC,QAAA,UAAU,EAAE,QAA4C;AAAA,cAA3C;AAAEH,YAAAA,MAAM,EAAE;AAAEI,cAAAA,OAAF;AAAWC,cAAAA;AAAX;AAAV,WAA2C;AACvD,eAAKC,UAAL,CAAgBF,OAAO,CAACC,aAAD,CAAP,CAAuBE,KAAvC;AACA,SAHF;AAKC,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWC,UALxB;AAOC,QAAA,KAAK,EAAE,MAAM;AACZ,eAAKM,KAAL;AACA,SATF;AAWC,QAAA,IAAI,EAAEM,CAAC,IAAI;AACV,eAAKC,IAAL;AACA,SAbF;AAeC,QAAA,OAAO,EAAED,CAAC,IAAI;AACbA,UAAAA,CAAC,CAACR,MAAF;AAGA;AAnBF;AAAA;AAAA;AAAA;AAAA;AAFF;AAwBA;;AAEDM,EAAAA,UAAU,GAAsB;AAAA,QAArBV,UAAqB,uEAAR,MAAQ;AACjC;AACG,UAAM;AACLC,MAAAA,KAAK,GAAG,CADH;AAELC,MAAAA,KAAK,GAAG,GAFH;AAGLY,MAAAA,KAAK,EAAEX,QAAQ,GAAG;AAHb,QAIFL,GAAG,CAACiB,YAAJ,CAAiBf,UAAjB,CAJJ;AAMD,SAAKgB,QAAL,CAAc;AACbhB,MAAAA,UADa;AAEbC,MAAAA,KAFa;AAGbC,MAAAA,KAHa;AAIbC,MAAAA,QAJa;AAKbC,MAAAA,MAAM,EAAEP,aAAa,CAACI,KAAD,EAAQC,KAAR;AALR,KAAd;AAQA;;AAEDI,EAAAA,KAAK,GAAa;AAAA,QAAZW,MAAY,uEAAH,CAAG;AACjBC,IAAAA,KAAK,CAACD,MAAD,CAAL;AACA;;AAEDJ,EAAAA,IAAI,GAAG;AACNK,IAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AA9E0B;;AAAtBpB,G,CAEEiB,Y,GAAe;AACrBI,EAAAA,IAAI,EAAE;AACLL,IAAAA,KAAK,EAAE,EADF;AAELZ,IAAAA,KAAK,EAAE;AAFF,GADe;AAKrBkB,EAAAA,MAAM,EAAE;AACPN,IAAAA,KAAK,EAAE,CADA;AAEPZ,IAAAA,KAAK,EAAE;AAFA,GALa;AASrBmB,EAAAA,IAAI,EAAE;AACLP,IAAAA,KAAK,EAAE,CADF;AAELZ,IAAAA,KAAK,EAAE;AAFF;AATe,C;AAiFvB,eAAeJ,GAAf","sourcesContent":["// the engine\n//set up the App logic, methods etc\n\nimport { Component } from 'react';\nimport View from \"./View.js\";\n// bring in View from another file\nimport { randomNumber, randomInteger } from './components/maths.js';\n\n\n\nclass App extends Component {\n//use class if there is a need to handle state\n\tstatic DIFFICULTIES = {\n\t\teasy: {\n\t\t\ttries: 10,\n\t\t\tupper: 25\n\t\t},\n\t\tmedium: {\n\t\t\ttries: 7,\n\t\t\tupper: 50,\n\t\t},\n\t\thard: {\n\t\t\ttries: 5,\n\t\t\tupper: 100,\n\t\t}\n\t}\n\n\tstate = {\n\t\tdifficulty: null,\n\t\tlower: null,\n\t\tupper: null,\n\t\tmaxTries: null,\n\t\ttarget: null,\n\t\tattempts: [],\n\t\tguess: null,\n\t};\n\n\trender() {\n\t\treturn (\n// this is sending all these values to View and destructured in line 12\n\t\t\t\t<View\n\t\t\t\t\tinitialise={({ target: { options, selectedIndex } }) => {\n\t\t\t\t\t\tthis.initialise(options[selectedIndex].value);\n\t\t\t\t\t}}\n\n\t\t\t\t\tdifficulty={this.state.difficulty}\n\t\t\t\t\t\n\t\t\t\t\tguess={() => {\n\t\t\t\t\t\tthis.guess();\n\t\t\t\t\t}}\n\n\t\t\t\t\thelp={e => {\n\t\t\t\t\t\tthis.help();\n\t\t\t\t\t}}\n\n\t\t\t\t\tonInput={e => {\n\t\t\t\t\t\te.target\n\n\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t);\n\t}\n\n\tinitialise(difficulty = \"easy\") {\n//\t\t1. grab difficulty setting from DIFFICULTIES\n\t\t\tconst {\n\t\t\t\tlower = 1,\n\t\t\t\tupper = 100,\n\t\t\t\ttries: maxTries = 10,\n\t\t\t} = App.DIFFICULTIES[difficulty];\n\n\t\tthis.setState({\n\t\t\tdifficulty,\n\t\t\tlower,\n\t\t\tupper,\n\t\t\tmaxTries,\n\t\t\ttarget: randomInteger(lower, upper)\n\n\t\t})\n\t}\n\n\tguess(number = 1) {\n\t\talert(number);\n\t}\n\n\thelp() {\n\t\talert(\"Help\");\n\t}\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}