{"ast":null,"code":"var _jsxFileName = \"/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/View.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// the body\n// here is the app interface, the presentation layer, the HTML\n// store functional components\n// dont use too much logic - pass down functionality from the App\n// App component imports in from here to render the UI\n// functional components DO NOT need imports\n// (unless you're using state)\n// all you're doing is making a function\nexport default function View(props) {\n  //use functional if there is no need to handle state\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guess The Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Try to guess a number between 1 and 100 in less than 10 tries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"?\",\n      onChange: props.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.guess,\n      children: \"Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.help,\n      children: \"Help\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/vincent/Desktop/Coding/The_Jump/guessthenumber_ReactVersion/src/View.js"],"names":["View","props","onChange","guess","help"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACpC;AACI,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA;AAAQ,MAAA,IAAI,EAAC,MAAb;AACQ,MAAA,WAAW,EAAC,GADpB;AAEQ,MAAA,QAAQ,EAAEA,KAAK,CAACC;AAFxB;AAAA;AAAA;AAAA;AAAA,YAJA,eAQA;AAAQ,MAAA,OAAO,EAAED,KAAK,CAACE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,eASA;AAAQ,MAAA,OAAO,EAAEF,KAAK,CAACG,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATA;AAAA,kBADJ;AAeH;KAjBuBJ,I","sourcesContent":["// the body\n// here is the app interface, the presentation layer, the HTML\n// store functional components\n\n// dont use too much logic - pass down functionality from the App\n// App component imports in from here to render the UI\n\n// functional components DO NOT need imports\n// (unless you're using state)\n// all you're doing is making a function\n\nexport default function View(props) {\n//use functional if there is no need to handle state\n    return (\n        <>\n        <h1>Guess The Number</h1>\n        <h2>Try to guess a number between 1 and 100 in less than 10 tries</h2>\n\n        <input  type=\"text\"\n                placeholder=\"?\"\n                onChange={props.onChange}/>\n                \n        <button onClick={props.guess}>Guess</button>\n        <button onClick={props.help}>Help</button>\n\n        {/* <button onClick={props.getHelp}>Help</button> */}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}